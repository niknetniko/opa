name: Nix Flake Checks

on:
  pull_request:
  push:

jobs:
  build:
    name: Build targets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/flake-checker-action@v4 # This action
      - uses: nixbuild/nix-quick-install-action@v27
      - uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-build-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-build-
          gc-max-store-size-linux: 1073741824
          purge: true
          purge-created: 0
          purge-primary-key: never
      - run: nix build

  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v27
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v27
      - uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ matrix.attr }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-${{ matrix.attr }}-
          gc-max-store-size-linux: 1073741824
          purge: true
          purge-created: 0
          purge-primary-key: never
      - run: nix build -L '.#${{ matrix.attr }}'
